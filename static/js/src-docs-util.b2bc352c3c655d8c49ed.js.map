{"version":3,"sources":["/home/francisco/git/react-awesome-styled-grid/src/docs/util.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_francisco_git_react_awesome_styled_grid_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_francisco_git_react_awesome_styled_grid_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","mdxType","id","parentName","className","isMDXComponent"],"mappings":"ucAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,EAAA,EAAAH,CAAA,GAAeN,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,aADR,aAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,iBADR,iBAGAL,OAAAE,EAAA,EAAAF,CAAA,4MAEyCA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,KAAf,SAFzC,cAGAN,OAAAE,EAAA,EAAAF,CAAA,kBACEA,OAAAE,EAAA,EAAAF,CAAA,KAAGM,WAAW,cAAaN,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,QAA3B,kKAE2BN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,wBAF3B,6FAKFN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,EAAA,EAAAH,CAAA,CAAMM,WAAW,OAAU,CAC5BC,UAAa,gBADZ,qjBA6BLP,OAAAE,EAAA,EAAAF,CAAA,kBACEA,OAAAE,EAAA,EAAAF,CAAA,KAAGM,WAAW,cAAaN,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,cAC3BN,OAAAE,EAAA,EAAAF,CAAA,OAAKM,WAAW,cAAaN,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,EAAA,EAAAH,CAAA,CAAMM,WAAW,OAAU,CACpDC,UAAa,gBADY,oFAO7BP,OAAAE,EAAA,EAAAF,CAAA,KAAGM,WAAW,cAAaN,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,gBAC3BN,OAAAE,EAAA,EAAAF,CAAA,OAAKM,WAAW,cAAaN,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,EAAA,EAAAH,CAAA,CAAMM,WAAW,OAAU,CACpDC,UAAa,iBADY,kQAWnCX,EAAWY,gBAAiB","file":"static/js/src-docs-util.10d7909c.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"utilities\"\n    }}>{`Utilities`}</h1>\n    <h2 {...{\n      \"id\": \"media-queries\"\n    }}>{`Media Queries`}</h2>\n    <p>{`To use in your css the media queries with the same breakpoints of the grid,\njust import the config as in the example below. If you are not using a\ncustom config, it is not mandatory to pass `}<em parentName=\"p\">{`props`}</em>{` to config`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Tip:`}</strong>{` since react-awesome-styled-grid is mobile-first grid,\nthe css inserted without media querie is applied in mobile resolution.\nThe next media querie (e.g. SM `}<inlineCode parentName=\"p\">{`config().media['sm']`}</inlineCode>{`), will apply css on the\ndevices with resolutions above of 48 rem (768px), and so on...`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React from 'react'\nimport styled from 'styled-components'\nimport {Container, Row, Col, config} from 'react-awesome-styled-grid'\n\nexport default styled(({ className, children}) => {\n  return (\n    <Container className={className}>\n      <Row>\n        <Col>{children}</Col>\n      </Row>\n    </Container>\n  )\n})\\`\n  // css here...\n\n  \\${props => config(props).media['sm']\\`\n    color: red;\n    // ...more css here\n  \\`}\n\n  \\${props => config(props).media['md']\\`\n    color: purple;\n    font-size: 1.5rem;\n    // ...more css here\n  \\`}\n\\`\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Your code`}</strong></p>\n      <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}>{`\\${props => config(props).media['sm']\\`\n color: red;\n // ...more css here\n\\`}\n`}</code></pre>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Your output`}</strong></p>\n      <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{\n          \"className\": \"language-css\"\n        }}>{`@media only screen and (min-width: 48rem) {\n color: red;\n // ...more css here\n}\n`}</code></pre>\n    </blockquote>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}